# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Publish and Deploy with Docker

on:
  push:
    branches: [ main, master ]
concurrency:
  group: ${{ github.workflow }}-${{ github.actor }}
  cancel-in-progress: false

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      checks: write
      contents: read
      issues: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin
      - name: Install docker
        run: |
          command docker -v || curl -fsSL get.docker.com | sudo bash
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Test and assemble with Gradle
        run: ./gradlew check assemble generateOpenApiDocs
        env:
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: chmod +x deploy.sh
      - name: Deploy to docker
        run: ./deploy.sh
        env:
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          shell: bash
          command: bash <(curl -Ls https://coverage.codacy.com/get.sh) report $(find . -name 'jacoco*.xml' -printf '-r %p ')
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
      - name: Publish Test Report
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          junit_files: "**/build/test-results/test/TEST-*.xml"
        if: always()
      - name: Upload openapi artifacts
        uses: actions/upload-artifact@v2
        with:
          name: openapi
          path: build/openapi.json
