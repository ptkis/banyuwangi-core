# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches-ignore:
      - main
      - master
concurrency:
  group: ${{ github.workflow }}-${{ github.actor }}
  cancel-in-progress: false
#  pull_request:
#    branches: [ main, master ]

jobs:
  build:

    runs-on: ubuntu-latest
    timeout-minutes: 120

    permissions:
      checks: write
      contents: read
      issues: read
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin
    - name: Decode application secret
      uses: timheuer/base64-to-file@v1.2
      with:
        encodedString: ${{ secrets.APPLICATION_SECRET_PROPERTIES }}
        fileName: src/test/resources/application-secret.properties
        fileDir: .
    - name: Get FIREBASE_JSON from secrets
      run: |
        echo $FIREBASE_JSON > src/main/resources/banyuwangi-dashboard-firebase-adminsdk.json
      env:
        FIREBASE_JSON: ${{ secrets.FIREBASE_JSON }}
    - name: Install docker
      run: |
        command docker -v || curl -fsSL get.docker.com | sudo bash
    - name: Remove Rabbit MQ
      run: docker rm -f rabbitmq || true
    - name: Start Rabbit MQ
      run: docker run -d --name=rabbitmq -p 5672:5672 -e RABBITMQ_NODE_PORT=5672 ptkis/rabbitmq-federated:10-mining-amd64
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test with Gradle
      run: ./gradlew --stacktrace --info check
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload coverage
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        shell: bash
        command: bash <(curl -Ls https://coverage.codacy.com/get.sh) report $(find . -name 'jacoco*.xml' -printf '-r %p ')
      if: ${{ github.actor != 'dependabot[bot]' }}
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
    - name: Remove application-secret.properties
      run: rm -f src/test/resources/application-secret.properties || true
      if: always()
    - name: Remove Rabbit MQ
      run: docker rm -f --volumes rabbitmq || true
      if: always()
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      with:
        report_paths: '**/build/test-results/test/TEST-*.xml'
      if: always()
